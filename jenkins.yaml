credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "Docker Hub login"
              id: "docker-hub-creds"
              username: "pkonieczny321"
              password: "{AQAAABAAAABAW+BowRO3vxZ2cMn7T/20/hicwnYXtKJmyqQnQIvjG7ub7CPWEodOfRIxnyhNVFrYmDCswln0MBlKp2OnPi1u+lcggD1qW+MDL0SOrf6Nq/Q=}"
              scope: GLOBAL
          - usernamePassword:
              description: "Pulling/pushing to GitHub"
              id: "github-creds"
              username: "lolek1979"
              password: "{AQAAABAAAACwoX8XNU0hDRAtJMSORkTufohC1h3Y/DBHvmo0LxTW3qRtpv2ocXyR+e4vcLGlGuUgCr8KHVoyb5Un86dQNsM7mfi1/KFkbNb6uHpAjtcupV1WVm/u0HD2P8FJTIGsIdUJvSjv2HR67FpM/MJ649IBABIxPBO0xdueVCvEgE1P8uwoSJF199WzB2oBZCsz48zlZFYVtTdYBlQF57E/xH83XFmQULnxBPz6u/m0HsaupnaSz70rplT4Zt+PhN7ytZz0}"
              scope: GLOBAL
          - string:
              description: "Argo CD API token for deployments"
              id: "argocd-token"
              secret: "{AQAAABAAAAFwXJUHNNZFp4pKJ0G482yrlo8IlFROXc5y3z1jWXw6U7wcpFoHkxDiXzj040/Og+vPzkgIrgfcrH7wWo/5zCMoX52eagGW6JmV4RvNd+oGNk2JWDvRTCVg2Hm6rsZ6FmG4VaLgzHQ9G/Ora1G4J9oI8rwcEK8mXNUevFdq2NC2KFYSnE+ygtrhSPVhgSgadvSm4Zy+qS1PbFkmSd2CI6o/DiliPdck5IiPqpg+yVu0BMblTheK9EVRbselpHnLFbIb+SxJ7wwUV/1RIvG7pjNEcilPV5aBNWDdZ1LFUG5etN7NxH57PFUym+cdf9g+HK96EPcdboR3z6hMhNvIp4G5ZMQE4/8g5tbQdsL6H7rjQVRgSDU59VgE+zFDKfti/+akQ7jZWpwfATG6Hf62cMSdx7I5Lgpek/nX7sbpFmm18YQe/j12oCYxZwvpjRyQqYNkeXcUhRJdfz0sYVs3cA0WyhYi346wl0DyCpoCV/b5wt/oJa8VZnrjNNlnoSANEJkV}"
              scope: GLOBAL

jenkins:
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
    - kubernetes:
        name: "kubernetes"
        namespace: "jenkins"
        jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
        jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
        serverUrl: "https://kubernetes.default"
        podLabels:
          - key: "jenkins/jenkins-jenkins-agent"
            value: "true"
        templates:
          # Default JNLP Agent Template (unchanged)
          - name: "jenkins-jenkins-agent"
            label: "jenkins-jenkins-agent"
            namespace: "jenkins"
            podRetention: "never"
            serviceAccount: "default"
            nodeUsageMode: "NORMAL"
            yamlMergeStrategy: "override"
            containers:
              - name: "jnlp"
                image: "jenkins/inbound-agent:3301.v4363ddcca_4e7-3"
                args: "^${computer.jnlpmac} ^${computer.name}"
                workingDir: "/home/jenkins/agent"
                resourceLimitCpu: "512m"
                resourceLimitMemory: "512Mi"
                resourceRequestCpu: "512m"
                resourceRequestMemory: "512Mi"
          # Custom Docker-enabled Agent Template:
          - name: "docker-agent"
            label: "docker-agent"
            namespace: "jenkins"
            podRetention: "never"
            serviceAccount: "default"
            nodeUsageMode: "NORMAL"
            yamlMergeStrategy: "override"
            # Add security context at the pod level to make sure the jenkins user can access the Docker socket.
            supplementalGroups: 20  # Replace 999 with the group ID that owns /var/run/docker.sock on your host.
            volumes:
              - hostPathVolume:
                  mountPath: "/var/run/docker.sock"
                  hostPath: "/var/run/docker.sock"
            containers:
              - name: "jnlp"
                image: "pkonieczny321/jenkins-docker-agent:latest"
                args: "^${computer.jnlpmac} ^${computer.name}"
                workingDir: "/home/jenkins/agent"
                resourceLimitCpu: "512m"
                resourceLimitMemory: "512Mi"
                resourceRequestCpu: "512m"
                resourceRequestMemory: "512Mi"
                # Optional: you can add envVars here if needed
                envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://jenkins.jenkins.svc.cluster.local:8080/"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: true
  labelAtoms:
    - name: "built-in"
    - name: "docker-agent"
    - name: "jenkins-jenkins-agent"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
    - "architecture"
    - "clock"
    - diskSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "swapSpace"
    - tmpSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "responseTime"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "admin"
          name: "Jenkins Admin"
          properties:
            - "apiToken"
            - "consoleUrlProvider"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
            - "experimentalFlags"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"

globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"

appearance:
  prism:
    theme: PRISM

security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  scriptApproval:
    forceSandbox: false

unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false

tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
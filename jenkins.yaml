credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "Docker Hub login"
          id: "docker-hub-creds"
          password: "{AQAAABAAAAAw41SAbybbn8XRz1stj/ymz6sOLTy/MFkggcZLZphgLEYHLgTb59wiHyckkIHrM0c2JaTBJfVyZ7LD0i2z2ayaKA==}"
          scope: GLOBAL
          username: "pkonieczny321"
      - usernamePassword:
          description: "Pulling/pushing to GitHub"
          id: "github-creds"
          password: "{AQAAABAAAAGQ5dfOpQo3cPgWIhRCgpoDcWWfcpcicgxPBNFgEGquJAwbJZz0k0yQ+FuUKI4WHzp8y7Q9Sa4zdbyV+2H+alo0DxcC+3rjiXeCVojS4QRS+Tpx2xCVyRshDOIXWytqwaXKA3Lwax4b12dlHZiX/5Ine6MP1zxlk5fmQ+3N1ERMl2qc8Suu4bfgOm6A9ZaiSXw5+tBCVKR5nomP0UqjYQrdc0x4QJAUrl5wT2BtSnYAFo4yb7v4n7rRbXm2obAVrVYAO/xa13pf9xXYabS3gGt6MnQLxlD5dhff3ImfS8F+3FtZGQ0SkSMoZwErTsfgPH7sLmFfdinsZA+Py+NQv4Wp56OYpFvNBO2V5pTOd2uKqUdBICLxqMz/7hVbUIlsE9+8ffKj2712LZOF/ksJy9Ule5GjIpCbXqbABbwlx0eYgQYch4S2rngKOYOTme7aeL2ze539frn30T2igXu6cAh18YL1Lhi8O2zxeyu9SO/eJkUOY3V19xDoFCLeAekYgH66iVniAnPN+s0s5kOSmSLh+j5GqckH4auUTS6CuJklaEI=}"
          scope: GLOBAL
          username: "lolek1979"
      - string:
          description: "Argo CD API token for deployments"
          id: "argocd-token"
          scope: GLOBAL
          secret: "{AQAAABAAAADwDijb2qAChQpXoM4rxYDtKeuQnW9CM/TkQQiXrO8yOyXf6Ba4/bI8uHLU//fN1W6wRaSqHHqf0qAz3A2ZHJoFFKwTGapHhO3iohgdMlyVYHi0JeZsnfK3lV27rOKf+TXo342reaK1azDQdOnuIoTHQtkBpMXAgJpBFwFucZ9Ti306otEsMEaWW22bMhZ5z7Zl9hJ+fg98pr+/ef42ht8dfWho8+DR5NtxqGZRm+yA6/d3fARaMJ2CqOMVChHX4azWq+JUKI4/wxEyG+GnA6iBwToTo/1FH+AR/skIYKvBul0/KrQGIWxI2UnQHHh5DklKPpj912fSDxs88YqZL126hg==}"
jenkins:
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
      jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
      name: "kubernetes"
      namespace: "jenkins"
      podLabels:
      - key: "jenkins/jenkins-jenkins-agent"
        value: "true"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:3301.v4363ddcca_4e7-3"
          name: "jnlp"
          resourceLimitCpu: "512m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "512m"
          resourceRequestMemory: "512Mi"
          workingDir: "/home/jenkins/agent"
        id: "d5e6f291-c609-4adf-8f2c-68c85ae7cb42"
        label: "jenkins-jenkins-agent"
        name: "jenkins-jenkins-agent"
        namespace: "jenkins"
        nodeUsageMode: NORMAL
        podRetention: "never"
        serviceAccount: "jenkins"
        yamlMergeStrategy: "override"
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          envVars:
          - envVar:
              key: "JENKINS_URL"
              value: "http://jenkins.jenkins.svc.cluster.local:8080/"
          image: "pkonieczny321/jenkins-docker-agent:latest"
          name: "jnlp"
          resourceLimitCpu: "512m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "512m"
          resourceRequestMemory: "512Mi"
          workingDir: "/home/jenkins/agent"
        id: "383b2e23-f0d6-45d9-88d3-30ec5f026579"
        label: "docker-agent"
        name: "docker-agent"
        namespace: "jenkins"
        nodeUsageMode: NORMAL
        podRetention: "never"
        runAsUser: "0"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
            readOnly: false
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: true
  disabledAdministrativeMonitors:
  - "hudson.util.DoubleLaunchChecker"
  - "hudson.diagnosis.ReverseProxySetupMonitor"
  labelAtoms:
  - name: "built-in"
  - name: "docker-agent"
  - name: "jenkins-jenkins-agent"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Jenkins Admin"
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "mailer"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
jobs:
  - script: >
      pipelineJob('autotest-creds') {
        definition {
            cpsScm {
                scm {
                    git {
                        remote {
                            url('https://github.com/your-org/your-repo.git')
                            credentials('github-creds')
                        }
                        branches('main')
                    }
                }
                scriptPath('Jenkinsfile')
            }
        }
      }
# jobs:
#   - script: >
#       pipelineJob('sw-movie-app') {
#         properties {
#           parametersDefinitionProperty {
#             parameterDefinitions {
#               stringParameterDefinition {
#                 name('imageName')
#                 defaultValue('pkonieczny321/sw-movie-app')
#                 description('Docker image name')
#               }
#               stringParameterDefinition {
#                 name('imageTag')
#                 defaultValue('1.0.0')
#                 description('Docker image tag')
#               }
#             }
#           }
#         }

#         definition {
#           cpsScm {
#             lightweight(true)
#             scm {
#               git {
#                 remote {
#                   url('https://github.com/lolek1979/sw-movie-app-k8s.git')
#                   credentials('github-creds')
#                 }
#                 branches('*/main')
#               }
#             }
#             scriptPath('Jenkinsfile')
#           }
#         }
#       }
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  scriptApproval:
    forceSandbox: false
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  globalLibraries:
    libraries:
    - defaultVersion: "main"
      name: "jenkins-shared-library"
      retriever:
        modernSCM:
          libraryPath: "./"
          scm:
            git:
              credentialsId: "github-creds"
              id: "b2b2040f-29af-4690-b3a2-b1cee3e9acbf"
              remote: "https://github.com/lolek1979/jenkins-shared-library.git"
              traits:
              - "gitBranchDiscovery"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "https://jenkins.k8s.orb.local/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "Docker Hub login"
              id: "docker-hub-creds"
              username: "pkonieczny321"
              password: "{AQAAABAAAABAW+BowRO3vxZ2cMn7T/20/hicwnYXtKJmyqQnQIvjG7ub7CPWEodOfRIxnyhNVFrYmDCswln0MBlKp2OnPi1u+lcggD1qW+MDL0SOrf6Nq/Q=}"
              scope: GLOBAL
          - usernamePassword:
              description: "Pulling/pushing to GitHub"
              id: "github-creds"
              username: "lolek1979"
              password: "{AQAAABAAAACwoX8XNU0hDRAtJMSORkTufohC1h3Y/DBHvmo0LxTW3qRtpv2ocXyR+e4vcLGlGuUgCr8KHVoyb5Un86dQNsM7mfi1/KFkbNb6uHpAjtcupV1WVm/u0HD2P8FJTIGsIdUJvSjv2HR67FpM/MJ649IBABIxPBO0xdueVCvEgE1P8uwoSJF199WzB2oBZCsz48zlZFYVtTdYBlQF57E/xH83XFmQULnxBPz6u/m0HsaupnaSz70rplT4Zt+PhN7ytZz0}"
              scope: GLOBAL
          - string:
              description: "Argo CD API token for deployments"
              id: "argocd-token"
              secret: "{AQAAABAAAAFwXJUHNNZFp4pKJ0G482yrlo8IlFROXc5y3z1jWXw6U7wcpFoHkxDiXzj040/Og+vPzkgIrgfcrH7wWo/5zCMoX52eagGW6JmV4RvNd+oGNk2JWDvRTCVg2Hm6rsZ6FmG4VaLgzHQ9G/Ora1G4J9oI8rwcEK8mXNUevFdq2NC2KFYSnE+ygtrhSPVhgSgadvSm4Zy+qS1PbFkmSd2CI6o/DiliPdck5IiPqpg+yVu0BMblTheK9EVRbselpHnLFbIb+SxJ7wwUV/1RIvG7pjNEcilPV5aBNWDdZ1LFUG5etN7NxH57PFUym+cdf9g+HK96EPcdboR3z6hMhNvIp4G5ZMQE4/8g5tbQdsL6H7rjQVRgSDU59VgE+zFDKfti/+akQ7jZWpwfATG6Hf62cMSdx7I5Lgpek/nX7sbpFmm18YQe/j12oCYxZwvpjRyQqYNkeXcUhRJdfz0sYVs3cA0WyhYi346wl0DyCpoCV/b5wt/oJa8VZnrjNNlnoSANEJkV}"
              scope: GLOBAL

jenkins:
  clouds:
    - kubernetes:
        name: "kubernetes"
        namespace: "jenkins"
        jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
        jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
        serverUrl: "https://kubernetes.default"
        templates:
          - name: "jenkins-docker-agent"
            label: "jenkins-docker-agent"
            # Instead of using structured keys for containers and initContainers,
            # we provide a full pod specification as raw YAML.
            yamls:
              - |
                apiVersion: v1
                kind: Pod
                metadata:
                  labels:
                    jenkins/jenkins-jenkins-agent: "true"
                spec:
                  initContainers:
                    - name: fix-docker-socket-permissions
                      image: busybox:latest
                      command:
                        - sh
                        - -c
                        - "chmod 660 /var/run/docker.sock && chown root:docker /var/run/docker.sock && sleep 3600"
                      volumeMounts:
                        - name: docker-socket
                          mountPath: /var/run/docker.sock
                  containers:
                    - name: jnlp
                      image: "pkonieczny321/node-docker:latest"
                      alwaysPullImage: true
                      args: [ "^${computer.jnlpmac}", "^${computer.name}" ]
                      workingDir: "/home/jenkins/agent"
                  volumes:
                    - name: docker-socket
                      hostPath:
                        path: /var/run/docker.sock
                        type: Socket
                  # Additional pod-level options (instanceCap, idleMinutes, etc.) can be set here if supported
        # If you prefer to use structured fields for options like instanceCap, idleMinutes,
        # add them at this level:
        instanceCap: 5
        idleMinutes: 90
        slaveConnectionTimeout: 100

globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"

appearance:
  prism:
    theme: PRISM

# Security: Only include keys supported by the GlobalConfigurationCategory$Security schema.
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  scriptApproval:
    forceSandbox: false
  prism:
    theme: PRISM

unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false

tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"